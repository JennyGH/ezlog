SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)
CMAKE_MINIMUM_REQUIRED(VERSION 3.11)

PROJECT(ezlog VERSION 1.0.0.0)

MESSAGE(STATUS "PROJECT INFO:")
MESSAGE(STATUS "    CMAKE_PROJECT_NAME:    ${CMAKE_PROJECT_NAME}")
MESSAGE(STATUS "    CMAKE_BUILD_TYPE:      ${CMAKE_BUILD_TYPE}")
MESSAGE(STATUS "    CMAKE_SOURCE_DIR:      ${CMAKE_SOURCE_DIR}")
MESSAGE(STATUS "    CMAKE_PROJECT_VERSION: ${CMAKE_PROJECT_VERSION}")

MESSAGE(STATUS "SYSTEM INFO:")
MESSAGE(STATUS "    CMAKE_SYSTEM_NAME:      ${CMAKE_SYSTEM_NAME}")
MESSAGE(STATUS "    CMAKE_SYSTEM_PROCESSOR: ${CMAKE_SYSTEM_PROCESSOR}")
MESSAGE(STATUS "    CMAKE_SIZEOF_VOID_P:    ${CMAKE_SIZEOF_VOID_P}")
MESSAGE(STATUS "    MSVC:                   ${MSVC}")
MESSAGE(STATUS "    MINGW:                  ${MINGW}")
MESSAGE(STATUS "    WIN32:                  ${WIN32}")
MESSAGE(STATUS "    UNIX:                   ${UNIX}")
MESSAGE(STATUS "    APPLE:                  ${APPLE}")
MESSAGE(STATUS "    IOS:                    ${IOS}")
MESSAGE(STATUS "    ANDROID:                ${ANDROID}")
MESSAGE(STATUS "    OHOS:                   ${OHOS}")

SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY     "${CMAKE_BINARY_DIR}/bin")
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY     "${CMAKE_BINARY_DIR}/bin")
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY     "${CMAKE_BINARY_DIR}/bin")

# ========== For diffrent platform ==========
IF(UNIX AND NOT APPLE)
    SET(LINUX TRUE)
    SET(SHARED_LIB_SUFFIX     ".so")
    SET(STATIC_LIB_SUFFIX     ".a")
    SET(EXECUTABLE_LIB_SUFFIX "")
    ADD_DEFINITIONS(-DLINUX=1)
ENDIF(UNIX AND NOT APPLE)

IF(APPLE)
    SET(APPLE TRUE)
    SET(SHARED_LIB_SUFFIX     ".a")
    SET(STATIC_LIB_SUFFIX     ".a")
    SET(EXECUTABLE_LIB_SUFFIX "")
    ADD_DEFINITIONS(-DAPPLE=1)
ENDIF(APPLE)

IF(WIN32)
    SET(WINDOWS TRUE)
    SET(SHARED_LIB_SUFFIX     ".dll")
    SET(STATIC_LIB_SUFFIX     ".lib")
    SET(EXECUTABLE_LIB_SUFFIX ".exe")
    ADD_DEFINITIONS(-DWINDOWS=1)
ENDIF(WIN32)
# ===========================================

IF(MSVC)
    SET(CMAKE_C_FLAGS                  "${CMAKE_C_FLAGS}   /MP /utf-8")
    SET(CMAKE_CXX_FLAGS                "${CMAKE_CXX_FLAGS} /MP /utf-8")
    SET(CMAKE_CXX_FLAGS_RELEASE        "${CMAKE_CXX_FLAGS_RELEASE} /O2 /W0")
ELSEIF(UNIX OR MINGW)
    SET(CMAKE_C_FLAGS                  "${CMAKE_C_FLAGS}   -fPIC")
    SET(CMAKE_CXX_FLAGS                "${CMAKE_CXX_FLAGS} -fPIC")
	SET(CMAKE_CXX_FLAGS_RELEASE        "${CMAKE_CXX_FLAGS_RELEASE} -O3 -w")
ENDIF() # ENDIF MSVC

# Add C/C++ Macros
ADD_DEFINITIONS(
# You can add macro definition directory here, like:
#   -DTEST_DEFNITION=1 # ==> #define TEST_DEFNITION 1
    -DPROJECT_ROOT="${CMAKE_SOURCE_DIR}"
)

INCLUDE_DIRECTORIES(
# You can add include directory here, like:
#   ${CMAKE_SOURCE_DIR}/3rd/xxxlib/include
  ${CMAKE_SOURCE_DIR}/include
)

# Add link directories
LINK_DIRECTORIES(
# You can add link directory here, like:
#   ${CMAKE_SOURCE_DIR}/3rd/xxxlib/lib
)

# Add sub dirctories.
ADD_SUBDIRECTORY(src)
ADD_SUBDIRECTORY(test)

SET_TARGET_PROPERTIES(${PRJ_TARGET} PROPERTIES FOLDER "CMakePredefinedTargets")
