PROJECT(ezlog VERSION 1.1.4 DESCRIPTION "ezlog")

IF(MSVC)
    SET(VERSIONINFO_RC ${PROJECT_BINARY_DIR}/VersionInfo.rc)
    CONFIGURE_FILE(${PROJECT_SOURCE_DIR}/VersionInfo.rc.in ${VERSIONINFO_RC})
ENDIF() # ENDIF MSVC

FILE(GLOB_RECURSE EXPORTS_FILES
    ${PROJECT_SOURCE_DIR}/*.def
    ${PROJECT_SOURCE_DIR}/*.map
)

FILE(GLOB_RECURSE PUBLIC_INCLUDE_FILES
    ${CMAKE_SOURCE_DIR}/include/*.h
)

FILE(GLOB_RECURSE INCLUDE_FILES
    ${PROJECT_SOURCE_DIR}/*.h
    ${PROJECT_SOURCE_DIR}/*.hpp
    ${PUBLIC_INCLUDE_FILES}
)

FILE(GLOB_RECURSE SOURCE_FILES
    ${PROJECT_SOURCE_DIR}/*.c
    ${PROJECT_SOURCE_DIR}/*.cpp
)

SOURCE_GROUP("Header Files" FILES "${INCLUDE_FILES}")
SOURCE_GROUP("Source Files" FILES "${SOURCE_FILES}")

SET(BUILD_TYPE STATIC)
IF(${BUILD_SHARED})
    SET(BUILD_TYPE SHARED)
ENDIF()

ADD_LIBRARY(
    ${PROJECT_NAME}
    ${BUILD_TYPE}
    ${INCLUDE_FILES}
    ${SOURCE_FILES}
    ${EXPORTS_FILES}  # Add export file of C APIs.
    ${VERSIONINFO_RC} # Add version info.
)

IF(CMAKE_CXX_CPPCHECK)
    ADD_CUSTOM_COMMAND(
        TARGET ${PROJECT_NAME}
        PRE_BUILD
        COMMAND ${CPPCHECK_COMMAND} ${PROJECT_SOURCE_DIR}
    )
ENDIF() # ENDIF `cppcheck` was found.

IF(UNIX AND NOT ANDROID)
    SET(LINK_LIBS pthread)
ENDIF() # ENDIF UNIX && !ANDROID

TARGET_LINK_LIBRARIES(
    ${PROJECT_NAME}
    ${LINK_LIBS}
)

INSTALL(
    TARGETS ${PROJECT_NAME}
    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
    ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
)
INSTALL(
    FILES ${PUBLIC_INCLUDE_FILES}
    DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
)

SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES VERSION ${PROJECT_VERSION} SOVERSION ${PROJECT_VERSION_MAJOR})
IF(UNIX AND ${BUILD_SHARED})
    SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES LINK_FLAGS "-Wl,--version-script=${PROJECT_SOURCE_DIR}/exports.map")
ENDIF() # ENDIF UNIX && BUILD_SHARED